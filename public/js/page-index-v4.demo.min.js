var purple = "#5f50c5",
    purpleLight = "#7f73d1",
    purpleDark = "#4c409e",
    success = "#17B6A4",
    successDark = "#129283",
    primary = "#2184DA",
    primaryDark = "#1e77c5",
    info = "#38AFD3",
    inverse = "#3C454D",
    warning = "#fcaf41",
    danger = "#F04B46",
    dangerLight = "#F58A87",
    dangerDark = "#c03c38",
    lime = "#65C56F",
    grey = "#aab3ba",
    white = "#fff",
    fontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif',
    fontWeight = "500",
    fontStyle = "normal",
    handleWidgetStatSparkline = function () {
        "use strict";

        function e() {
            e = [20, 30, 45, 40, 45, 60, 70, 60, 50, 40, 35, 40, 50, 70, 90, 40];
            r.width = "100%", r.type = "line", r.height = "95px", r.lineColor = warning, r.fillColor = purpleDark, r.highlightLineColor = warning, r.highlightSpotColor = warning, 0 !== $("#sparkline-line-chart").length && $("#sparkline-line-chart").sparkline(e, r);
            var e = [50, 30, 45, 40, 50, 90, 20, 35, 40, 50, 70, 40, 80, 70, 60, 50, 40, 60, 40, 90, 50, 30, 50, 40, 30, 20, 50, 68, 92];
            r.barColor = t, r.barSpacing = 3, r.type = "bar", r.barWidth = "10", 0 !== $("#sparkline-bar-chart").length && $("#sparkline-bar-chart").sparkline(e, r)
        }
        var t = "rgba(0,0,0,0.5)",
            r = {
                height: "50px",
                width: "100%",
                fillColor: t,
                lineWidth: 3,
                spotRadius: "0",
                highlightLineColor: t,
                highlightSpotColor: t,
                spotColor: !1,
                minSpotColor: !1,
                maxSpotColor: !1
            };
        e(), $(window).on("resize", function () {
            $("#sparkline-line-chart").empty(), $("#sparkline-bar-chart").empty(), e()
        })
    },
    handleBrowserChart = function () {
        "use strict";
        var e = [{
                label: "Chrome",
                data: 15,
                color: success
            }, {
                label: "Safari",
                data: 15,
                color: primary
            }, {
                label: "IE",
                data: 7,
                color: info
            }, {
                label: "Firefox",
                data: 8,
                color: warning
            }, {
                label: "Opera",
                data: 8,
                color: danger
            }],
            t = "#flot-browser-chart";
        if (0 !== $(t).length) {
            var r = $(t).attr("data-height");
            $(t).height(r), $.plot($(t), e, {
                series: {
                    pie: {
                        innerRadius: .5,
                        show: !0,
                        radius: 1,
                        label: {
                            show: !0,
                            radius: .75,
                            formatter: function (e, t) {
                                return "<div style='font-size:11px; text-align:center; color:#fff;'>" + e + "<br/>" + Math.round(t.percent) + "%</div>"
                            },
                            threshold: .1
                        },
                        stroke: {
                            width: .1
                        }
                    }
                },
                legend: {
                    show: !1
                }
            })
        }
    },
    handleVisitorAnalyticsChart = function () {
        "use strict";
        for (var e = "#flot-visitor-chart", t = [], r = 0; r < 8; r += .2) t.push([r, Math.sin(r) + 2]);
        if (0 !== $(e).length) {
            var i = $(e).attr("data-height");
            $(e).height(i);
            var a = {
                series: {
                    curvedLines: {
                        apply: !0,
                        active: !0,
                        monotonicFit: !0
                    }
                },
                grid: {
                    borderWidth: 0
                },
                legend: {
                    show: !1
                },
                xaxis: {
                    show: !1
                },
                yaxis: {
                    show: !1
                }
            };
            $.plot($(e), [{
                data: t,
                lines: {
                    show: !0,
                    fill: !0,
                    fillColor: "rgba(0,0,0,0.5)",
                    shadow: !1
                },
                stack: !1,
                color: purple
            }], a)
        }
    },
    handleServerChart = function () {
        "use strict";

        function e() {
            h.setData([t()]);
            var a = h.getData();
            a[0].color = r > 75 ? danger : r > 50 ? warning : lime, h.draw(), setTimeout(e, i)
        }

        function t() {
            for (o.length > 0 && (o = o.slice(1)); o.length < n;) {
                var e = (o.length > 0 ? o[o.length - 1] : 50) + 10 * Math.random() - 5;
                e < 0 && (e = 0), e > 100 && (e = 100), r = parseInt(e), $('[data-id="server-load-number"]').html(e.toFixed(2) + "%"), o.push(e)
            }
            for (var t = [], i = 0; i < o.length; ++i) t.push([i, o[i]]);
            return t
        }
        var r = 0,
            i = 1e3,
            a = "#flot-server-chart";
        if (0 !== $(a).length) {
            var l = $(a).attr("data-height");
            $(a).height(l);
            var o = [],
                n = 150,
                s = {
                    series: {
                        shadowSize: 0,
                        color: lime,
                        lines: {
                            show: !0,
                            fill: !0,
                            lineWidth: 2
                        }
                    },
                    yaxis: {
                        min: 0,
                        max: 100,
                        tickColor: "#ddd",
                        font: {
                            size: 12,
                            lineHeight: 16,
                            style: fontStyle,
                            weight: fontWeight,
                            family: fontFamily,
                            color: inverse
                        }
                    },
                    xaxis: {
                        show: !0,
                        tickColor: "#ddd",
                        font: {
                            size: 12,
                            lineHeight: 16,
                            style: fontStyle,
                            weight: fontWeight,
                            family: fontFamily,
                            color: inverse
                        }
                    },
                    grid: {
                        borderWidth: 0,
                        borderColor: "#ddd"
                    }
                },
                h = $.plot($(a), [t()], s);
            e()
        }
    },
    handleWidgetReload = function () {
        "use strict";
        $('[data-click="widget-reload"]').live("click", function (e) {
            e.preventDefault();
            var t = $(this).closest(".widget");
            $(t).append('<div class="widget-loader"><span class="spinner-small">Loading...</span></div>'), setTimeout(function () {
                $(t).find(".widget-loader").remove()
            }, 1500)
        })
    },
    PageDemo = function () {
        "use strict";
        return {
            init: function () {
                handleWidgetStatSparkline(), handleBrowserChart(), handleVisitorAnalyticsChart(), handleServerChart(), handleWidgetReload()
            }
        }
    }();
